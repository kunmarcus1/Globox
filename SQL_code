-- Final extract the data
SELECT
    users.id AS uid,
    groups.group AS testgroup,
    users.country AS country,
    users.gender AS gender,
    COALESCE(groups.device, 'NA') AS device_type,
    CASE WHEN activity.spent > 0 THEN 1 ELSE 0 END AS Converted,
    SUM(COALESCE(activity.spent, 0)) AS totalspen
FROM
    users
LEFT JOIN
    groups ON groups.uid = users.id
LEFT JOIN
    activity ON users.id = activity.uid
GROUP BY 1, 2, 3, 4, 5, 6;

-- Average spent per group
SELECT
    g.group,
    AVG(a.spent)
FROM
    users u
LEFT JOIN
    activity a ON u.id = a.uid
LEFT JOIN
    groups g ON g.uid = a.uid
WHERE
    g.group IS NOT NULL
GROUP BY
    g.group;

-- Total conversion
SELECT
    AVG(COALESCE(t.conversion, 0)) * 100
FROM
    users
JOIN
    groups g ON users.id = g.uid
LEFT JOIN
    (SELECT
        uid,
        CASE WHEN SUM(spent) > 0 THEN 1 ELSE 0 END AS conversion
    FROM
        activity
    GROUP BY
        uid) t ON t.uid = users.id;

-- Conversion per group
SELECT
    g.group,
    AVG(COALESCE(t.conversion, 0)) * 100
FROM
    users
JOIN
    groups g ON users.id = g.uid
LEFT JOIN
    (SELECT
        uid,
        CASE WHEN SUM(spent) > 0 THEN 1 ELSE 0 END AS conversion
    FROM
        activity
    GROUP BY
        uid) t ON t.uid = users.id
GROUP BY
    g.group;

-- Conversion per group
WITH converted AS (
    SELECT DISTINCT
        uid,
        CASE WHEN spent IS NOT NULL THEN 1 ELSE 0 END AS user_converted
    FROM
        activity
)
SELECT
    "group",
    ROUND(AVG(COALESCE(user_converted, 0)) * 100, 3)
FROM
    groups g
LEFT JOIN
    converted c ON g.uid = c.uid
GROUP BY
    "group";

-- Average amount spent for the group
WITH total_spent AS (
    SELECT
        g.uid,
        g.group,
        SUM(COALESCE(activity.spent, 0)) AS sum_spent
    FROM
        users u
    LEFT JOIN
        groups g ON g.uid = u.id
    LEFT JOIN
        activity ON u.id = activity.uid
    GROUP BY
        g.group,
        g.uid
)
SELECT
    groups.group,
    AVG(sum_spent) AS avgspent
FROM
    total_spent
LEFT JOIN
    groups ON groups.uid = total_spent.uid
GROUP BY
    groups.group;


